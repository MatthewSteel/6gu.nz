The long list:
 - built-in functions,
 - displaying, entering complex data structures :-(
 - "native" map/for etc,
 - dynamic sheet creation etc.
 - better formula display/input,
 - "actions" (xhr etc),
   - mutation story,
   - conditional evaluation,
 - js interop,
 - collaboration,
 - custom cell formatting incl charts.
 - closures and first-class functions. (Ordered args?)



Short-term must-haves:
 - Cell error display.
 - Fix name translation.
 - Consistent cell-sizing and overflow?

Possible next projects:
 - Browsing through data?
 - Making new sheets,
 - Drop-down boxes on top-level sheets to select them,

More motion:
 - Tab and shift-tab,
 - Shift-enter,
 - Go down a cell when you enter a formula. (Half-speed!)

Complex data:
 - `...=` maybe makes a list?
 - Don't care about structs maybe, because the whole sheet is a struct?
 - _Do_ care about tables, though.
 - Maybe want a "matrix" type too -- one function, two inputs, or data.
    - "Cross"?
 - Functions: function(out, in1, in2)? Kinda magical if it's a macro...
    - Simple, though... And we can _use_ it!


If we show multiple tables on the screen at once, we probably want to be able to manage selections separately.
  - Maybe an instantiated table component has an id, then. Fine.


Do we want a special "sheet" literal function to make structs?
  `=row(id="asdf", name="Fred")`?
  `=table(row(id="asdf", name="Fred"), row(id="qwer", name="Sally"))`?



Names in call args should be looked up on the target cell's sheet?





What do things look like from top-level?


Sub-table stuff:
 - Internal scrolling?
 - Display of complex data types:
  - Arrays,
  - Objects,
  - "Tables".


What about interop?
 - Later. "Compat import/export" etc.
What about closures?
 - Will require special support. Doable though.



What's next after that? Ideas:
 - A proper formula box,
 - Thinking about laziness and/or conditional evaluation.
    - Maybe `fib=if(n < 2, #[1], #[fib(n=n-1) + fib(n=n-2)]).value`
    - Might be too confusing. Want to see how it plays with tsort too.
