The long list:
 - dynamic sheet creation etc.
 - built-in functions,
 - displaying, entering complex data structures
 - "native" map/for etc,
 - better formula display/input,
 - "actions" (xhr etc),
   - mutation story,
   - conditional evaluation, HOF or first-class cell references,
 - js interop,
 - collaboration,
 - custom cell formatting incl charts.
   - input modes for rich text?
 - closures and first-class functions. (Ordered args?)
 - a website, some vids.
 - putting it online




Short-term nice-to-have:
 - Consistent cell-sizing and overflow?

Possible next projects:
 - Making new sheets,
 - Table renaming.

Once these features are done I will make a video.

Then tables, maybe?



Complex data:
 - `...=` maybe makes a list? Or just `.=`
 - Don't care about structs maybe, because the whole sheet is a struct?
 - _Do_ care about tables, though.
 - Maybe want a "matrix" type too -- one function, two inputs, or data.
    - "Cross"?

  Hmm, maybe continue a list with `... ? expr` or something.
   - If there isn't enough room, make room.


Functions: function(out, in1, in2)? Kinda magical if it's a macro...
  - Simple, though... And we can _use_ it!
  - Alternatives?
    `fun(&out, &in1, &in2)`
    `fun([out], [in1])`
    `function = ?(in1=?, in2=?)
      seems kinda redundant?

      I like function = ?(out, in1, in2). It's short, and because `?` is
      "special" it doesn't look like a regular function.

  We can use that for conditional evaluation too --
    if(true, ?(out, in), ?(scary))().
    fib = if(n < 2, ?(n), ?(fib(n - 1) + fib(n - 2)))() ??? No.

    What's the difference?
      #[] just delays the expression inside. Takes no arguments.
      ?() makes a function given references.

    mapped = arr.map(before => after)
      Can we get away with arrow functions? Are they too hard?
      .filter(x => x < 5)...
      Maybe with some good editor support: filter([[value] => ["keep?"]])

      I suspect we actually just want `.filter(value, keep?)`
      Cut out the complexity -- don't use a function, we can do that.
        "Advanced users" can do that. "Real functions" can take refs?




Do we want a special "sheet" literal function to make structs?
  `=row(id="asdf", name="Fred")`?
  `=table(row(id="asdf", name="Fred"), row(id="qwer", name="Sally"))`?




Sub-table stuff:
 - Internal scrolling?
 - Display of complex data types:
  - Arrays,
  - Objects,
  - "Tables".


What about interop?
 - Later. "Compat import/export" etc.
What about closures?
 - Will require special support. Doable though.



What's next after that? Ideas:
 - A proper formula box,
 - Thinking about laziness and/or conditional evaluation.
    - Maybe `fib=if(n < 2, #[1], #[fib(n=n-1) + fib(n=n-2)]).value`
    - Might be too confusing. Want to see how it plays with tsort too.
